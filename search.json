[{"path":"https://the-hull.github.io/remis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://the-hull.github.io/remis/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"building-up-flexible-queries","dir":"Articles","previous_headings":"","what":"Building up Flexible Queries","title":"Interacting with the UNFCCC API using remis","text":"Details Flexible Query API can found official documentation Data Interface UNFCCC. Define whether annexOne nonAnnexOne data shall downloaded, : Select party Select year Choose variable based ccmgu’s Execute query Note, objects rem (excluding parties) provide data sources (applicable) reflected list items annexOne, nonAnnexOne, extData, cad, cadCP2.","code":""},{"path":[]},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"select-party","dir":"Articles","previous_headings":"Building up Flexible Queries > Example A","what":"1. Select Party","title":"Interacting with the UNFCCC API using remis","text":"choose Germany France. Note, parties Annex .","code":"# in RStudio:  # View(rem$parties)  parties_mask <- rem$parties$parties_code %in% c('DEU', 'FRA') parties <- rem$parties[parties_mask, c('id', 'name', 'categoryCode')] parties #>    id    name categoryCode #> 18 23  France     annexOne #> 19 13 Germany     annexOne"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"select-years","dir":"Articles","previous_headings":"Building up Flexible Queries > Example A","what":"2. Select years","title":"Interacting with the UNFCCC API using remis","text":"select years 1990 latest inventory year (2020).","code":"# base year has id = 0 years <- rem$years$annexOne[rem$years$annexOne$id != 0, ] years #>    id                       name #> 2  32                       1990 #> 3  33                       1991 #> 4  34                       1992 #> 5  35                       1993 #> 6  36                       1994 #> 7  37                       1995 #> 8  38                       1996 #> 9  39                       1997 #> 10 40                       1998 #> 11 41                       1999 #> 12 42                       2000 #> 13 43                       2001 #> 14 44                       2002 #> 15 45                       2003 #> 16 46                       2004 #> 17 47                       2005 #> 18 48                       2006 #> 19 49                       2007 #> 20 50                       2008 #> 21 51                       2009 #> 22 52                       2010 #> 23 53                       2011 #> 24 54                       2012 #> 25 55                       2013 #> 26 56                       2014 #> 27 57                       2015 #> 28 58                       2016 #> 29 59                       2017 #> 30 60                       2018 #> 31 61                       2019 #> 32 62 Last Inventory Year (2020)"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"select-from-ccmugs","dir":"Articles","previous_headings":"Building up Flexible Queries > Example A","what":"3. Select from ccmug’s","title":"Interacting with the UNFCCC API using remis","text":"selection ccmug’s possible several ways. Ideally, one item interest selected, category measure, appropriate variable querying identified. can done either browsing RStudio View(rem) using interactive filter function, searching programmatically. example shows latter. , assume interest emissions cars transportation sector fuel type total CRF-Category 1..3.b.Cars (id = 9279). Therefore, begin category starting point. table also highlights nesting structure throughout CRF-Category tree. Next, find appropriate variables (.e. combination ccmug’s) contain category interest. total 60 variable combinations include category interest. Note select_varid() also allows selections including ccmugs specific. Let’s inspect variables human-readable format: Next, filter desired measure Net emissions/removals gas Aggregate GHGs: relevant information (e.g., units, type gas) provided . addition, unit conversion factors can identified looking relevant source target units rem$units$units cross-referencing rem$units$annexOne.","code":"# parties are annexOne, thus:  category_mask <- grepl('1.A.3.b.i  Cars', rem$categories$annexOne$name) category <- rem$categories$annexOne[category_mask, ] as.data.frame(t(category)) #>                                                V1 #> id                                           9279 #> level_1                                    Totals #> level_2           Total GHG emissions with LULUCF #> level_3                                1.  Energy #> level_4 1.AA  Fuel Combustion - Sectoral approach #> level_5                          1.A.3  Transport #> level_6              1.A.3.b  Road Transportation #> level_7                           1.A.3.b.i  Cars #> level_8                                      <NA> #> name                              1.A.3.b.i  Cars variables <- select_varid(   vars = rem$variables$annexOne,   category_id = category$id) head(variables, 20) #>      variableId categoryId classificationId measureId gasId unitId #> 4354     928586       9279            10525     10591 10469     28 #> 4390     928580       9279            10513     10591 10469     28 #> 4396     928626       9279            10524     10591 10469     28 #> 4398     928524       9279            10520     10591 10469     28 #> 4399     928544       9279            10528     10591 10469     28 #> 6386     927247       9279            10510     10578 10637      7 #> 6387     927097       9279            10542     10578 10637      7 #> 6388     927130       9279            10530     10578 10637      7 #> 6390     927111       9279            10528     10578 10637      7 #> 7441     927327       9279            10524     10578 10637      7 #> 7442     927370       9279            10513     10578 10637      7 #> 7443     927427       9279            10520     10578 10637      7 #> 7445     927449       9279            10525     10578 10637      7 #> 7446     927199       9279            10538     10578 10637      7 #> 9261     924906       9279            10538     10460 10471      5 #> 9275     926278       9279            10528     10460 10468      5 #> 9284     926628       9279            10525     10460 10469      5 #> 9296      17578       9279            10510     10460 10468      5 #> 9323     924766       9279            10525     10460 10468      5 #> 9326     926287       9279            10520     10460 10469      5 variables_text <- get_variables(   rms = rem,   variable_id = variables$variableId) variables_text[order(variables_text$classification, variables_text$measure), ] #>    variableId      categoryId                classificationId #> 43     927370 1.A.3.b.i  Cars                         Biomass #> 48     928580 1.A.3.b.i  Cars                         Biomass #> 56     928872 1.A.3.b.i  Cars                         Biomass #> 58     928896 1.A.3.b.i  Cars                         Biomass #> 4      200184 1.A.3.b.i  Cars                         Biomass #> 21     925496 1.A.3.b.i  Cars                         Biomass #> 32     926374 1.A.3.b.i  Cars                         Biomass #> 33     926583 1.A.3.b.i  Cars                         Biomass #> 44     927427 1.A.3.b.i  Cars                      Diesel Oil #> 46     928524 1.A.3.b.i  Cars                      Diesel Oil #> 57     928873 1.A.3.b.i  Cars                      Diesel Oil #> 60     928966 1.A.3.b.i  Cars                      Diesel Oil #> 5      200185 1.A.3.b.i  Cars                      Diesel Oil #> 29     926287 1.A.3.b.i  Cars                      Diesel Oil #> 35     926637 1.A.3.b.i  Cars                      Diesel Oil #> 36     926785 1.A.3.b.i  Cars                      Diesel Oil #> 42     927327 1.A.3.b.i  Cars                   Gaseous Fuels #> 50     928626 1.A.3.b.i  Cars                   Gaseous Fuels #> 51     928708 1.A.3.b.i  Cars                   Gaseous Fuels #> 55     928864 1.A.3.b.i  Cars                   Gaseous Fuels #> 6      200186 1.A.3.b.i  Cars                   Gaseous Fuels #> 15     924937 1.A.3.b.i  Cars                   Gaseous Fuels #> 19     925453 1.A.3.b.i  Cars                   Gaseous Fuels #> 20     925469 1.A.3.b.i  Cars                   Gaseous Fuels #> 45     927449 1.A.3.b.i  Cars                        Gasoline #> 49     928586 1.A.3.b.i  Cars                        Gasoline #> 54     928849 1.A.3.b.i  Cars                        Gasoline #> 59     928909 1.A.3.b.i  Cars                        Gasoline #> 7      200187 1.A.3.b.i  Cars                        Gasoline #> 13     924766 1.A.3.b.i  Cars                        Gasoline #> 26     926275 1.A.3.b.i  Cars                        Gasoline #> 34     926628 1.A.3.b.i  Cars                        Gasoline #> 38     927111 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 47     928544 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 52     928803 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 53     928813 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 8      200188 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 27     926278 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 28     926280 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 31     926309 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 39     927130 1.A.3.b.i  Cars                    Liquid Fuels #> 9      200189 1.A.3.b.i  Cars                    Liquid Fuels #> 16     924993 1.A.3.b.i  Cars                    Liquid Fuels #> 17     925125 1.A.3.b.i  Cars                    Liquid Fuels #> 23     925785 1.A.3.b.i  Cars                    Liquid Fuels #> 40     927199 1.A.3.b.i  Cars              Other Fossil Fuels #> 10     200190 1.A.3.b.i  Cars              Other Fossil Fuels #> 14     924906 1.A.3.b.i  Cars              Other Fossil Fuels #> 18     925435 1.A.3.b.i  Cars              Other Fossil Fuels #> 22     925688 1.A.3.b.i  Cars              Other Fossil Fuels #> 37     927097 1.A.3.b.i  Cars              Other Liquid Fuels #> 11     200191 1.A.3.b.i  Cars              Other Liquid Fuels #> 24     926080 1.A.3.b.i  Cars              Other Liquid Fuels #> 25     926180 1.A.3.b.i  Cars              Other Liquid Fuels #> 30     926297 1.A.3.b.i  Cars              Other Liquid Fuels #> 41     927247 1.A.3.b.i  Cars              Total for category #> 1       17578 1.A.3.b.i  Cars              Total for category #> 2       94409 1.A.3.b.i  Cars              Total for category #> 3      173310 1.A.3.b.i  Cars              Total for category #> 12     715050 1.A.3.b.i  Cars              Total for category #>                  measureId          gasId            unitId reporting #> 43        Fuel Consumption         No gas                TJ  annexOne #> 48 Implied emission factor            CO₂              t/TJ  annexOne #> 56 Implied emission factor            N₂O             kg/TJ  annexOne #> 58 Implied emission factor            CH₄             kg/TJ  annexOne #> 4   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 21  Net emissions/removals            CH₄                kt  annexOne #> 32  Net emissions/removals            N₂O                kt  annexOne #> 33  Net emissions/removals            CO₂                kt  annexOne #> 44        Fuel Consumption         No gas                TJ  annexOne #> 46 Implied emission factor            CO₂              t/TJ  annexOne #> 57 Implied emission factor            N₂O             kg/TJ  annexOne #> 60 Implied emission factor            CH₄             kg/TJ  annexOne #> 5   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 29  Net emissions/removals            CO₂                kt  annexOne #> 35  Net emissions/removals            CH₄                kt  annexOne #> 36  Net emissions/removals            N₂O                kt  annexOne #> 42        Fuel Consumption         No gas                TJ  annexOne #> 50 Implied emission factor            CO₂              t/TJ  annexOne #> 51 Implied emission factor            N₂O             kg/TJ  annexOne #> 55 Implied emission factor            CH₄             kg/TJ  annexOne #> 6   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 15  Net emissions/removals            CH₄                kt  annexOne #> 19  Net emissions/removals            CO₂                kt  annexOne #> 20  Net emissions/removals            N₂O                kt  annexOne #> 45        Fuel Consumption         No gas                TJ  annexOne #> 49 Implied emission factor            CO₂              t/TJ  annexOne #> 54 Implied emission factor            N₂O             kg/TJ  annexOne #> 59 Implied emission factor            CH₄             kg/TJ  annexOne #> 7   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 13  Net emissions/removals            CH₄                kt  annexOne #> 26  Net emissions/removals            N₂O                kt  annexOne #> 34  Net emissions/removals            CO₂                kt  annexOne #> 38        Fuel Consumption         No gas                TJ  annexOne #> 47 Implied emission factor            CO₂              t/TJ  annexOne #> 52 Implied emission factor            CH₄             kg/TJ  annexOne #> 53 Implied emission factor            N₂O             kg/TJ  annexOne #> 8   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 27  Net emissions/removals            CH₄                kt  annexOne #> 28  Net emissions/removals            N₂O                kt  annexOne #> 31  Net emissions/removals            CO₂                kt  annexOne #> 39        Fuel Consumption         No gas                TJ  annexOne #> 9   Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 16  Net emissions/removals            CO₂                kt  annexOne #> 17  Net emissions/removals            CH₄                kt  annexOne #> 23  Net emissions/removals            N₂O                kt  annexOne #> 40        Fuel Consumption         No gas                TJ  annexOne #> 10  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 14  Net emissions/removals            N₂O                kt  annexOne #> 18  Net emissions/removals            CH₄                kt  annexOne #> 22  Net emissions/removals            CO₂                kt  annexOne #> 37        Fuel Consumption         No gas                TJ  annexOne #> 11  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 24  Net emissions/removals            N₂O                kt  annexOne #> 25  Net emissions/removals            CH₄                kt  annexOne #> 30  Net emissions/removals            CO₂                kt  annexOne #> 41        Fuel Consumption         No gas                TJ  annexOne #> 1   Net emissions/removals            CH₄                kt  annexOne #> 2   Net emissions/removals            N₂O                kt  annexOne #> 3   Net emissions/removals            CO₂                kt  annexOne #> 12  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne var_ids <- variables_text[variables_text$measure==\"Net emissions/removals\" &                  variables_text$gas==\"Aggregate GHGs\", ] var_ids #>    variableId      categoryId                classificationId #> 4      200184 1.A.3.b.i  Cars                         Biomass #> 5      200185 1.A.3.b.i  Cars                      Diesel Oil #> 6      200186 1.A.3.b.i  Cars                   Gaseous Fuels #> 7      200187 1.A.3.b.i  Cars                        Gasoline #> 8      200188 1.A.3.b.i  Cars Liquefied Petroleum Gases (LPG) #> 9      200189 1.A.3.b.i  Cars                    Liquid Fuels #> 10     200190 1.A.3.b.i  Cars              Other Fossil Fuels #> 11     200191 1.A.3.b.i  Cars              Other Liquid Fuels #> 12     715050 1.A.3.b.i  Cars              Total for category #>                 measureId          gasId            unitId reporting #> 4  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 5  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 6  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 7  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 8  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 9  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 10 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 11 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 12 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"query-for-download","dir":"Articles","previous_headings":"Building up Flexible Queries > Example A","what":"4. Query for download","title":"Interacting with the UNFCCC API using remis","text":"Queries using Flexible Query API done flex_query(), uses .req object rem make POST request: See results:","code":"result <- flex_query(   rem,   variable_ids = var_ids$variableId,   party_ids = parties$id,   year_ids = years$id,   pretty = TRUE)  head(result, 20) #>    parties years variableId      categoryId classificationId #> 1  Germany  1990     200184 1.A.3.b.i  Cars          Biomass #> 2  Germany  1991     200184 1.A.3.b.i  Cars          Biomass #> 3  Germany  1992     200184 1.A.3.b.i  Cars          Biomass #> 4  Germany  1993     200184 1.A.3.b.i  Cars          Biomass #> 5  Germany  1994     200184 1.A.3.b.i  Cars          Biomass #> 6  Germany  1995     200184 1.A.3.b.i  Cars          Biomass #> 7  Germany  1996     200184 1.A.3.b.i  Cars          Biomass #> 8  Germany  1997     200184 1.A.3.b.i  Cars          Biomass #> 9  Germany  1998     200184 1.A.3.b.i  Cars          Biomass #> 10 Germany  1999     200184 1.A.3.b.i  Cars          Biomass #> 11 Germany  2000     200184 1.A.3.b.i  Cars          Biomass #> 12 Germany  2001     200184 1.A.3.b.i  Cars          Biomass #> 13 Germany  2002     200184 1.A.3.b.i  Cars          Biomass #> 14 Germany  2003     200184 1.A.3.b.i  Cars          Biomass #> 15 Germany  2004     200184 1.A.3.b.i  Cars          Biomass #> 16 Germany  2005     200184 1.A.3.b.i  Cars          Biomass #> 17 Germany  2006     200184 1.A.3.b.i  Cars          Biomass #> 18 Germany  2007     200184 1.A.3.b.i  Cars          Biomass #> 19 Germany  2008     200184 1.A.3.b.i  Cars          Biomass #> 20 Germany  2009     200184 1.A.3.b.i  Cars          Biomass #>                 measureId          gasId            unitId reporting #> 1  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 2  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 3  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 4  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 5  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 6  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 7  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 8  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 9  Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 10 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 11 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 12 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 13 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 14 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 15 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 16 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 17 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 18 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 19 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #> 20 Net emissions/removals Aggregate GHGs kt CO₂ equivalent  annexOne #>    number_value string_value #> 1            NA           NA #> 2            NA           NA #> 3            NA           NA #> 4            NA           NA #> 5            NA           NA #> 6      33.78233         <NA> #> 7      46.03468         <NA> #> 8      79.19863         <NA> #> 9      82.90973         <NA> #> 10    109.39233         <NA> #> 11    261.02488         <NA> #> 12    389.07220         <NA> #> 13    512.62435         <NA> #> 14    793.73382         <NA> #> 15   1193.50417         <NA> #> 16   2614.46296         <NA> #> 17   4668.01095         <NA> #> 18   5080.86875         <NA> #> 19   4435.05037         <NA> #> 20   4446.86238         <NA> library(ggplot2) result %>%   setNames(nm = gsub(\"Id\", \"\", names(.))) %>%    mutate(years = as.numeric(gsub('[^0-9]', \"\", result$years, perl = TRUE))) %>%   ggplot(aes(x = years, y = number_value, color = parties)) +   geom_line() +   facet_wrap(~classification, scales = \"free_y\") +   labs(y = sprintf('GHG-Emissions [%s]', unique(result$unit)),        title = unique(result$category)) +   theme_minimal(base_size = 16) +   theme(legend.position = 'top', legend.direction = 'horizontal') #> Warning: Removed 7 rows containing missing values (`geom_line()`). `%nin%` <- Negate(`%in%`)  result %>%    setNames(nm = gsub(\"Id\", \"\", names(.))) %>%    mutate(years = as.numeric(gsub('[^0-9]', \"\", years, perl = TRUE))) %>%    filter(classification %nin% c('Total for category', 'Gaseous Fuels', 'Liquid Fuels')) %>%    group_by(parties, years) %>%    mutate(percent_contribution = number_value/sum(number_value, na.rm = TRUE) * 100,             ) %>%    ggplot(aes(y = as.factor(years), x = percent_contribution, fill = classification)) +   geom_bar(stat = 'identity') +   facet_wrap(~parties) +   labs(x = 'Contribution [%]',        y = 'Year',        title = unique(result$category)) +   theme_minimal(base_size = 16) +   scale_fill_brewer(palette = 'Set2', direction = -1) #> Warning: Removed 76 rows containing missing values (`position_stack()`)."},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"example-b","dir":"Articles","previous_headings":"Building up Flexible Queries","what":"Example B","title":"Interacting with the UNFCCC API using remis","text":"exploit Flexible Queries API download extData, focusing World Bank population data.","code":"#> # A tibble: 4 × 4 #>      id level_1       level_2                      name                         #>   <int> <chr>         <chr>                        <chr>                        #> 1 10501 External Data NA                           External Data                #> 2 10502 External Data Country Area                 Country Area                 #> 3 10503 External Data Gross Domestic Product - GDP Gross Domestic Product - GDP #> 4 10504 External Data Population                   Population # from extData - select Population Category: category_mask <- grepl('Population', rem$categories$extData$name, fixed = FALSE) category <- rem$categories$extData[category_mask, ]  # find variableIds containing population - ensure appropriate annex category  # is used here based on desired party var_ids <- select_varid(vars = rem$variables$annexOne, category_id = category$id)  # check and confirm desired variable is correct get_variables(rms = rem, var_ids$variableId) #>   variableId categoryId   classificationId        measureId  gasId    unitId #> 1     188991 Population Total for category Total population No gas thousands #>   reporting #> 1   extData  population <- flex_query(   rms = rem,   variable_ids = var_ids$variableId,    party_ids = parties$id,    year_ids = years$id) #> Warning in duplicate_check(rms, variable_id = variable_ids): Found duplicated variableId ids: 188991. #>  Check results and possibly exclude unwanted observations.   population %>%   setNames(nm = gsub(\"Id\", \"\", names(.))) %>%    mutate(years = as.numeric(gsub('[^0-9]', \"\", years, perl = TRUE))) %>%    ggplot(aes(x = years, y = number_value, color = parties)) +   geom_line(linewidth = 1.5) +   labs(y = sprintf('Population [%s]', unique(population$unit)),        title = unique(population$category)) +   theme_minimal(base_size = 16) +   theme(legend.position = 'top', legend.direction = 'horizontal')"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"example-c","dir":"Articles","previous_headings":"Building up Flexible Queries","what":"Example C","title":"Interacting with the UNFCCC API using remis","text":"code downloads visualizes time series used decomposition analyses Biennial Report Expert Council Climate Change issues, given Table 4, p. 220. data Table1.()s1 National Inventory Report UNFCCC, CRF-Category 1..1.Public Electricity Heat Production.","code":"# check cat1A1a <- rem$categories$annexOne[grepl(\"1.A.1.a.\", rem$categories$annexOne$name), ]  # manually choose id # cat1A1a$id[1]  # get variables cat1A1a_variables <- get_variables(   rms = rem,   select_varid(vars = rem$variables$annexOne, cat1A1a$id[1])$variableId )  #choose id: var_id <- cat1A1a_variables %>%   filter(classificationId == 'Total for category',          gasId == 'Aggregate GHGs'   ) %>%    dplyr::glimpse() %>%    dplyr::pull(variableId) #> Rows: 1 #> Columns: 7 #> $ variableId       <int> 714972 #> $ categoryId       <chr> \"1.A.1.a  Public Electricity and Heat Production\" #> $ classificationId <chr> \"Total for category\" #> $ measureId        <chr> \"Net emissions/removals\" #> $ gasId            <chr> \"Aggregate GHGs\" #> $ unitId           <chr> \"kt CO₂ equivalent\" #> $ reporting        <chr> \"annexOne\"  # download data cat1A1a_agg_ghg <- flex_query(   rms = rem,   variable_ids = var_id,   party_ids = 13,   year_ids = rem$years$annexOne$id)  # data includes year = \"base year\", # for most parties this = 1990, but may vary. # the code below replaces 'Base year' with NA, and thus discards the observation. # see UNFCCC API documentation cat1A1a_agg_ghg %>%   mutate(years = as.numeric(gsub('[^0-9]', \"\", years, perl = TRUE))) %>%    ggplot(aes(x = years, y = number_value)) +   geom_line(linewidth = 1, color = 'steelblue') +   geom_point(color = 'steelblue', size = 3) +   labs(y = sprintf('GHG-Emissions [%s]', unique(cat1A1a_agg_ghg$unitId)),        title = unique(cat1A1a_agg_ghg$categoryId)) +   theme_minimal(base_size = 16) +   theme(legend.position = 'top', legend.direction = 'horizontal') #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 1 rows containing missing values (`geom_point()`)."},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"duplicates","dir":"Articles","previous_headings":"","what":"Duplicates","title":"Interacting with the UNFCCC API using remis","text":"several duplicate variable id’s UNFCCC DI (n = 360). Duplicated variables seem differ one ccmug identical number / string value. Duplicated variables listed rem$duplicated_variableIds. example:","code":"rem$variables$annexOne[rem$variables$annexOne$variableId == rem$duplicate_variableIds[2], ] #>     variableId categoryId classificationId measureId gasId unitId #> 519     161997       8234            10510     10460 10469      5 #> 520     161997       8234            10827     10460 10469      5  get_variables(   rem,    rem$variables$annexOne[     rem$variables$annexOne$variableId == rem$duplicate_variableIds[2],      ]$variableId) #>   variableId                                categoryId    classificationId #> 1     161997 4.F.2.b  Cropland Converted to Other Land  Total for category #> 2     161997 4.F.2.b  Cropland Converted to Other Land Carbon stock change #>                measureId gasId unitId reporting #> 1 Net emissions/removals   CO₂     kt  annexOne #> 2 Net emissions/removals   CO₂     kt  annexOne"},{"path":[]},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"parties","dir":"Articles","previous_headings":"Meta Overview","what":"Parties","title":"Interacting with the UNFCCC API using remis","text":"Parties stored rem$parties","code":"# up to 5th entry on parties knitr::kable(rem$parties %>%                 dplyr::group_by(name_code) %>%                 dplyr::slice(1:3))"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"years","dir":"Articles","previous_headings":"Meta Overview","what":"Years","title":"Interacting with the UNFCCC API using remis","text":"Years stored rem$years respective","code":"knitr::kable(names(rem$years)) knitr::kable(rem$years$annexOne)"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"variable-overview-ccmug","dir":"Articles","previous_headings":"","what":"Variable Overview (ccmug)","title":"Interacting with the UNFCCC API using remis","text":"Sections give brief overview ccmgu’s.","code":""},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"categories","dir":"Articles","previous_headings":"Variable Overview (ccmug)","what":"Categories","title":"Interacting with the UNFCCC API using remis","text":"Categories UNFCCC CRF-Categories categories Compilation Accounting Data. tables category id name column. nested sub-categories exist, additional columns using name level_x (x = nesting depth) show category hierarchy.","code":"knitr::kable(names(rem$categories)) # up to 5th entry on parties knitr::kable(dplyr::slice(rem$categories$annexOne, 1:10)) knitr::kable(dplyr::slice(rem$categories$annexOne, 88:94))"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"classification","dir":"Articles","previous_headings":"Variable Overview (ccmug)","what":"Classification","title":"Interacting with the UNFCCC API using remis","text":"Classification differ based respective sectors /CRF-Categories: Energy: Fuel Types Agriculture: Livestock types LULUCF/LUCF: LULUCF/LUCF activities","code":"knitr::kable(head(rem$classification$annexOne, 10))"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"measures","dir":"Articles","previous_headings":"Variable Overview (ccmug)","what":"Measures","title":"Interacting with the UNFCCC API using remis","text":"Measures include:","code":"knitr::kable(head(rem$measures$annexOne, 10))"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"gasses","dir":"Articles","previous_headings":"Variable Overview (ccmug)","what":"Gasses","title":"Interacting with the UNFCCC API using remis","text":"Gasses include:","code":"knitr::kable(head(rem$gas$annexOne, 10))"},{"path":"https://the-hull.github.io/remis/articles/api-use.html","id":"units","dir":"Articles","previous_headings":"Variable Overview (ccmug)","what":"Units","title":"Interacting with the UNFCCC API using remis","text":"Units include:","code":"knitr::kable(head(rem$units$units, 10))"},{"path":"https://the-hull.github.io/remis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Hurley. Author, maintainer.","code":""},{"path":"https://the-hull.github.io/remis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hurley (2023). remis: Interact UNFCCC Data Interface API. https://github.com/-Hull/remis, https://-hull.github.io/remis/.","code":"@Manual{,   title = {remis: Interact with the UNFCCC Data Interface API},   author = {Alexander Hurley},   year = {2023},   note = {https://github.com/the-Hull/remis, https://the-hull.github.io/remis/}, }"},{"path":"https://the-hull.github.io/remis/reference/flex_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","title":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","text":"UNFCCC provides access National Inventory Reporting (NIR), World Bank Compilation Accounting (CAD) data Data Interface. Information data availability given , current observations 27 September, 2022 (12 January, 2023). flex query API allows programmatically downloading NIR World Bank data. See API's documentation additional information https://unfccc.int/process--meetings/transparency--reporting/greenhouse-gas-data/data-interface-help, note refers GUI implementation. Flex Query API made available remis flex_query(). Downloads require combination id values : Parties Years Variables corresponding steps querying : Identify party interest [rem_init()]$parties, note whether Annex-One Non-Annex-One, extract id. Choose (subset ) years based Annex-One Non-Annex-One party [rem_init()]$years. Select variables [rem_init()]$variables based based Annex-One Non-Annex-One party. helper function select_varid() allows narrowing based reporting categories, classifications, measures, units gasses (ccmug's). See select_varid() information. Selected variables can contextualized using get_variables(), provides text representations  ccmug id's.","code":""},{"path":"https://the-hull.github.io/remis/reference/flex_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","text":"","code":"flex_query(   rms,   variable_ids,   party_ids,   year_ids,   path = \"api/records/flexible-queries/\",   pretty = TRUE )"},{"path":"https://the-hull.github.io/remis/reference/flex_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","text":"rms list, object rem_init(). variable_ids numeric, variableIds interest party_ids numeric, partyIds interest year_ids numeric, yearIds interest path character, default 'api/records/flexible-queries/' pretty logical, ids transformed text descriptions?","code":""},{"path":"https://the-hull.github.io/remis/reference/flex_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","text":"data.frame several id columns (either text integers), results number_value string_value.","code":""},{"path":"https://the-hull.github.io/remis/reference/flex_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access the UNFCCC Data Interface using the Flex Query API — flex_query","text":"","code":"# \\donttest{  rem <- rem_init() #> parsing api/parties/ #> parsing api/years/single #> parsing api/dimension-instances/category #> parsing api/dimension-instances/classification #> parsing api/dimension-instances/measure #> parsing api/dimension-instances/gas #> parsing api/conversion/fq #> parsing api/variables/fq/annexOne #> parsing api/variables/fq/nonAnnexOne   cat1A1a <- rem$categories$annexOne[grepl(\"1.A.1.a.\", rem$categories$annexOne$name), ]  # manually choose id # cat1A1a$id[1]  # get variables cat1A1a_variables <- get_variables(   rms = rem,   select_varid(   vars = rem$variables$annexOne,   cat1A1a$id[1])$variableId )  #choose id: var_id <-   subset(cat1A1a_variables,   classificationId == 'Total for category',          gasId == 'Aggregate GHGs'   )$variableId  # download data cat1A1a_agg_ghg <- flex_query(   rms = rem,   variable_ids = var_id,   party_ids = 13, # Germany   year_ids = rem$years$annexOne$id) #> Error in flex_query(rms = rem, variable_ids = var_id, party_ids = 13,     year_ids = rem$years$annexOne$id): Please provide numeric id's for: variableIds   # }"},{"path":"https://the-hull.github.io/remis/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ccmgu information based on variableId — get_variables","title":"Extract ccmgu information based on variableId — get_variables","text":"Extract ccmgu information based variableId","code":""},{"path":"https://the-hull.github.io/remis/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ccmgu information based on variableId — get_variables","text":"","code":"get_variables(rms, variable_id)"},{"path":"https://the-hull.github.io/remis/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ccmgu information based on variableId — get_variables","text":"rms list, remis object variable_id numeric, annexOne nonAnnexOne variableIds [rem_init()]$variables","code":""},{"path":"https://the-hull.github.io/remis/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ccmgu information based on variableId — get_variables","text":"data.frame containing variableId text description corresponding ccmug id","code":""},{"path":"https://the-hull.github.io/remis/reference/get_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract ccmgu information based on variableId — get_variables","text":"","code":"# \\donttest{ rem <- rem_init() #> parsing api/parties/ #> parsing api/years/single #> parsing api/dimension-instances/category #> parsing api/dimension-instances/classification #> parsing api/dimension-instances/measure #> parsing api/dimension-instances/gas #> parsing api/conversion/fq #> parsing api/variables/fq/annexOne #> parsing api/variables/fq/nonAnnexOne  rem$variables$annexOne$variableId[25] #> [1] 1049067  get_variables(   rem,   rem$variables$annexOne$variableId[25]) #>   variableId                categoryId    classificationId measureId  gasId #> 1    1049067 3.A  Enteric Fermentation Fur-bearing Animals    Weight No gas #>   unitId reporting #> 1     kg  annexOne   # }"},{"path":"https://the-hull.github.io/remis/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://the-hull.github.io/remis/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://the-hull.github.io/remis/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://the-hull.github.io/remis/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://the-hull.github.io/remis/reference/rem_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize remis — rem_init","title":"Initialize remis — rem_init","text":"Get meta data Flex Query API initialize API.","code":""},{"path":"https://the-hull.github.io/remis/reference/rem_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize remis — rem_init","text":"","code":"rem_init(base_url = meta$api_base_url)"},{"path":"https://the-hull.github.io/remis/reference/rem_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize remis — rem_init","text":"base_url character, base url queries","code":""},{"path":"https://the-hull.github.io/remis/reference/rem_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize remis — rem_init","text":"list","code":""},{"path":"https://the-hull.github.io/remis/reference/rem_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize remis — rem_init","text":"","code":"# \\donttest{ rem <- rem_init() #> parsing api/parties/ #> parsing api/years/single #> parsing api/dimension-instances/category #> parsing api/dimension-instances/classification #> parsing api/dimension-instances/measure #> parsing api/dimension-instances/gas #> parsing api/conversion/fq #> parsing api/variables/fq/annexOne #> parsing api/variables/fq/nonAnnexOne names(rem) #>  [1] \"parties\"               \"years\"                 \"categories\"            #>  [4] \"classification\"        \"measures\"              \"gas\"                   #>  [7] \"units\"                 \"variables\"             \"duplicate_variableIds\" #> [10] \".req\"                    # }"},{"path":"https://the-hull.github.io/remis/reference/select_varid.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable selector — select_varid","title":"Variable selector — select_varid","text":"Select variables based categories, classifications, measures gasses using ids (ccmug). Variable selection based intersection supplied ids (union = FALSE) union (select variables supplied ccmug's present). ids supplied, variables returned.","code":""},{"path":"https://the-hull.github.io/remis/reference/select_varid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable selector — select_varid","text":"","code":"select_varid(   vars,   category_id = NULL,   classification_id = NULL,   measure_id = NULL,   gas_id = NULL,   unit_id = NULL,   union = TRUE )"},{"path":"https://the-hull.github.io/remis/reference/select_varid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable selector — select_varid","text":"vars data.frame variable ids corresponding cat/class/meas/gas ids. category_id numeric, classification_id numeric, measure_id numeric, gas_id numeric, unit_id numeric, ids [rem_init()]$ categories, classification, measures, gas, units. union logical, TRUE return variables supplied ccmug's represented, FALSE return every variable ccmug's present.","code":""},{"path":"https://the-hull.github.io/remis/reference/select_varid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable selector — select_varid","text":"data.frame dims vars ids supplied, rows resulting union/intersection ids, columns vars","code":""},{"path":"https://the-hull.github.io/remis/reference/select_varid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable selector — select_varid","text":"","code":"# \\donttest{  rem <- rem_init() #> parsing api/parties/ #> parsing api/years/single #> parsing api/dimension-instances/category #> parsing api/dimension-instances/classification #> parsing api/dimension-instances/measure #> parsing api/dimension-instances/gas #> parsing api/conversion/fq #> parsing api/variables/fq/annexOne #> parsing api/variables/fq/nonAnnexOne  category_mask <- grepl('1.A.3.b.i  Cars', rem$categories$annexOne$name) category <- rem$categories$annexOne[category_mask, ]  variables <- select_varid(   vars = rem$variables$annexOne,   category_id = category$id) head(variables, 20) #>      variableId categoryId classificationId measureId gasId unitId #> 2348     926637       9279            10520     10460 10468      5 #> 2357     925435       9279            10538     10460 10468      5 #> 2358     925469       9279            10524     10460 10471      5 #> 4022     928580       9279            10513     10591 10469     28 #> 4025     928544       9279            10528     10591 10469     28 #> 4034     928524       9279            10520     10591 10469     28 #> 4035     928626       9279            10524     10591 10469     28 #> 4038     928586       9279            10525     10591 10469     28 #> 4519     926628       9279            10525     10460 10469      5 #> 4526     924906       9279            10538     10460 10471      5 #> 4533     926278       9279            10528     10460 10468      5 #> 4562      17578       9279            10510     10460 10468      5 #> 4567     924766       9279            10525     10460 10468      5 #> 4573     925785       9279            10530     10460 10471      5 #> 5186     926287       9279            10520     10460 10469      5 #> 5205     173310       9279            10510     10460 10469      5 #> 5209     925688       9279            10538     10460 10469      5 #> 5373     926374       9279            10513     10460 10471      5 #> 5376     926785       9279            10520     10460 10471      5 #> 5384      94409       9279            10510     10460 10471      5  # }"}]
